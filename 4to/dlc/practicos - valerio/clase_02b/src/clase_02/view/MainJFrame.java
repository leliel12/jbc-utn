/*
 * MainJFrame.java
 *
 * Created on 13 de marzo de 2008, 20:39
 *
 *  Copyright (C) -  2008 - juan
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package clase_02.view;

import clase_02.Info;
import clase_02.back.Book;
import clase_02.back.Gears;
import java.io.FileNotFoundException;
import java.io.IOException;


/**
 * Ventana principal
 * @author  Juan
 * @version 1.0.1
 */
public class MainJFrame extends javax.swing.JFrame {

    private Gears gears;

    public static javax.swing.JFrame open() {
        javax.swing.JFrame frame = new MainJFrame();
        frame.setVisible(true);
        return frame;

    }

    /** Creates new form MainJFrame */
    private MainJFrame() {
        initComponents();
        try {
            gears = new Gears("libreria.dat");
        } catch (FileNotFoundException ex) {
            String error = "Error al Abrir Archivo: " + gears.getFile().getAbsolutePath();
            System.err.println(error);
            javax.swing.JOptionPane.showMessageDialog(null, error, "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * verifica si es o no el item que esta selecionado en el combobox
     * @param value texto del item a verificar
     * @return si el item esta seleccionado
     */
    private boolean isComboSelectedValue(String value) {
        return ((String) this.jComboBox1.getSelectedItem()).compareTo(value) == 0;
    }

     /**
     * verifica que los textfields no esten vacios para habilitar o no el boton
     * de aceptar
     */
    private void emptyFields() {
        this.jButton1.setEnabled(true);
        if (this.jTextField1.getText().trim().compareTo("") == 0) {
            this.jButton1.setEnabled(false);
        }
    }

    /**
     * verifica que sea posible parsear los numero de lo contrario deabilita 
     * el boton
     */
    private void canParse() {
        boolean a = true;
        try {
            Integer.parseInt(this.jTextField1.getText());
        } catch (Exception ex) {
            a = false;
        } finally {
            this.jButton1.setEnabled(a);
        }
    }

    /**
     * busqueda por isbn de libros
     */
    private void isbn() {
        Book[] b;
        int isbn = Integer.parseInt(this.jTextField1.getText());
        try {
            b = gears.getLibroByISBN(isbn);
            this.jTable1.setModel(new TableModel(b));
        } catch (IOException ex) {
            String error = "se ha producido un error al tratar de obtener los libros del archivo";
            System.err.println(error);
            javax.swing.JOptionPane.showMessageDialog(null, error, "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        } 
    }

    /**
     * busqueda de todos los libros
     */
    private void allBooks() {
        Book[] b;
        try {
            b = gears.getAllLibros();
            this.jTable1.setModel(new TableModel(b));
        } catch (IOException ex) {
            String error = "se ha producido un error al tratar de obtener los libros del archivo";
            System.err.println(error);
            javax.swing.JOptionPane.showMessageDialog(null, error, "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        } 
    }

    /**
     * busqueda de libros por titulo
     */
    private void titulo() {
        Book[] b;
        String tit = this.jTextField1.getText();
        try {
            b = gears.getLibroByName(tit);
            this.jTable1.setModel(new TableModel(b));
        } catch (IOException ex) {
            String error = "se ha producido un error al tratar de obtener los libros del archivo";
            System.err.println(error);
            javax.swing.JOptionPane.showMessageDialog(null, error, "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        } 
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(Info.PROGRAM_NAME + " - " + Info.VERSION);
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Criterios de Búsqueda"));

        jTextField1.setEnabled(false);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos los Libros", "Título de la Obra", "ISBN" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ISBN", "Título", "Precio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Items", jPanel1);

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText(Info.INFO_RESUME);
        jScrollPane2.setViewportView(jTextArea1);

        jTabbedPane1.addTab("Info", jScrollPane2);

        jTextArea2.setColumns(20);
        jTextArea2.setEditable(false);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText(Info.AUTHORS + "\nEmail: " + Info.MAIL);
        jScrollPane3.setViewportView(jTextArea2);

        jTabbedPane1.addTab("Autor", jScrollPane3);

        jTextArea3.setColumns(20);
        jTextArea3.setEditable(false);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setText(Info.LICENSE);
        jScrollPane4.setViewportView(jTextArea3);

        jTabbedPane1.addTab("Licencia", jScrollPane4);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/clase_02/resources/splash.png"))); // NOI18N
        jTabbedPane1.addTab("Splash", jLabel1);

        jMenu1.setText("Archivo");

        jMenuItem2.setText("Agregar Libro");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator1);

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Items");

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-707)/2, (screenSize.height-453)/2, 707, 453);
    }// </editor-fold>//GEN-END:initComponents
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (this.isComboSelectedValue("Todos los Libros")) {
            this.jTextField1.setEnabled(false);
            this.jButton1.setEnabled(true);
        }
        if (this.isComboSelectedValue("ISBN")) {
            this.jTextField1.setEnabled(true);
            this.emptyFields();
            this.canParse();
        }
        if (this.isComboSelectedValue("Título de la Obra")) {
            this.jTextField1.setEnabled(true);
            this.emptyFields();
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (this.isComboSelectedValue("Todos los Libros")) {
            this.allBooks();
        }
        if (this.isComboSelectedValue("ISBN")) {
            this.isbn();
        }
        if (this.isComboSelectedValue("Título de la Obra")) {
            this.titulo();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        try {
            Book b = AddBookJDialog.open();
            if (b != null) {//GEN-LAST:event_jMenuItem2ActionPerformed
                gears.addLibro(b);
            }
        } catch (IOException ex) {
            String error = "se ha producido un error al tratar de almacenar su libro";
            System.err.println(error);
            javax.swing.JOptionPane.showMessageDialog(null, error, "ERROR", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        if (this.jTextField1.isEnabled()) {
            if (this.isComboSelectedValue("ISBN")) {
                this.emptyFields();
                this.canParse();
            }
            if (this.isComboSelectedValue("Título de la Obra")) {
                this.emptyFields();
            }
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
