#BlueJ class context
comment0.params=obj
comment0.target=RegisterFile(E)
comment0.text=\nCrea\ un\ manejador\ para\ el\ RegisterFile,\ asociando\ al\ mismo\ el\ nombre\ "newfile.dat\ "\ a\ modo\ de\ file\ descriptor.\ \nAbre\ el\ archivo\ en\ disco\ asociado\ con\ ese\ file\ descriptor,\ en\ el\ directorio\ default,\ y\ en\ modo\ "r"\ (tal\ como\ se\ \nse\ usa\ en\ la\ clase\ RandomAccessFile).\ El\ par\u00E1metro\ obj\ se\ usa\ para\ tomar\ la\ clase\ de\ los\ objetos\ que\ ser\u00E1n\ \nalmacenados,\ pero\ ese\ objeto\ no\ se\ graba\ en\ el\ archivo\ (puede\ venir\ con\ valores\ por\ default\:\ s\u00F3lo\ importa\ su\nclase).\n@param\ obj\ un\ objeto\ de\ la\ clase\ base\ para\ el\ archivo.\n\n
comment1.params=nombre\ modo\ obj
comment1.target=RegisterFile(String,\ String,\ E)
comment1.text=\nCrea\ un\ manejador\ para\ el\ RegisterFile,\ asociando\ al\ mismo\ un\ nombre\ a\ modo\ de\ file\ descriptor.\ Abre\ el\ archivo\ en\ \ndisco\ asociado\ con\ ese\ file\ descriptor,\ en\ el\ modo\ indicado\ por\ el\ segundo\ par\u00E1metro.\ El\ modo\ de\ apertura\ es\ tal\ y\ \ncomo\ se\ usa\ en\ la\ clase\ RandomAccessFile\:\ "r"\ para\ s\u00F3lo\ lectura\ y\ "rw"\ para\ lectura\ y\ grabaci\u00F3n.\ Si\ el\ modo\ de\ \napertura\ enviado\ es\ null,\ o\ no\ es\ "r"\ ni\ "rw",\ se\ asumir\u00E1\ "r".\ El\ par\u00E1metro\ obj\ se\ usa\ para\ tomar\ la\ clase\ de\ los\ \nobjetos\ que\ ser\u00E1n\ almacenados,\ pero\ ese\ objeto\ no\ se\ graba\ en\ el\ archivo\ (puede\ venir\ con\ valores\ por\ default\:\ s\u00F3lo\ \nimporta\ su\ clase).\n@param\ nombre\ es\ el\ nombre\ f\u00EDsico\ y\ ruta\ del\ archivo\ a\ crear.\n@param\ modo\ es\ el\ modo\ de\ apertura\ del\ archivo\:\ "r"\ ser\u00E1\ s\u00F3lo\ lectura\ y\ "rw"\ ser\u00E1\ lectura\ y\ grabaci\u00F3n.\n@param\ obj\ un\ objeto\ de\ la\ clase\ base\ para\ el\ archivo.\n\n
comment10.target=long\ bytePos()
comment10.text=\nDevuelve\ el\ n\u00FAmero\ de\ byte\ en\ el\ cual\ est\u00E1\ posicionado\ el\ archivo\ en\ este\ momento.\n@return\ el\ n\u00FAmero\ de\ byte\ de\ posicionamiento\ actual.\n\n
comment11.target=void\ goFinal()
comment11.text=\nPosiciona\ el\ file\ pointer\ al\ final\ del\ archivo.\n\n
comment12.target=long\ length()
comment12.text=\nDevuelve\ la\ longitud\ del\ archivo,\ en\ bytes.\n@return\ el\ total\ de\ bytes\ del\ archivo.\n\n
comment13.target=boolean\ eof()
comment13.text=\nDetermina\ si\ se\ ha\ llegado\ al\ final\ del\ archivo\ o\ no.\n@return\ true\ si\ se\ lleg\u00F3\ al\ final\ -\ false\ en\ caso\ contrario.\n\n
comment14.params=r
comment14.target=boolean\ write(Register)
comment14.text=\nGraba\ un\ registro\ en\ el\ archivo,\ a\ partir\ de\ la\ posici\u00F3n\ dada\ por\ el\ file\ pointer\ en\ ese\ momento.\ El\ archivo\ se\nsupone\ abierto\ en\ modo\ de\ grabaci\u00F3n.\n@param\ obj\ el\ objeto\ a\ grabar.\n@return\ true\ si\ se\ pudo\ grabar\ -\ false\ en\ caso\ contrario.\n\n
comment15.params=r
comment15.target=boolean\ read(Register)
comment15.text=\nLee\ un\ registro\ del\ archivo,\ a\ partir\ de\ la\ posici\u00F3n\ del\ file\ pointer\ en\ ese\ momento.\ El\ archivo\ se\ supone\ \nabierto.\n@param\ obj\ el\ registro\ mediante\ el\ cual\ se\ har\u00E1\ la\ lectura.\ Los\ valores\ leidos\ vuelven\ en\ ese\ mismo\ objeto.\n@return\ true\ si\ la\ lectura\ pudo\ hacerse\ -\ false\ en\ caso\ contrario.\n\n
comment16.params=obj
comment16.target=long\ search(E)
comment16.text=\nBusca\ un\ registro\ en\ el\ archivo.\ Retorna\ -1\ si\ el\ registro\ no\ se\ encuentra,\ o\ el\ n\u00FAmero\ de\ byte\ donde\ comienza\ la\nprimera\ ocurrencia\ del\ registro\ en\ disco\ si\ se\ encontraba\ en\ el\ archivo.\ En\ general,\ el\ retorno\ de\ -1\ significa\ que\ \nel\ registro\ no\ fue\ encontrado,\ por\ cualquier\ causa.\ El\ file\ pointer\ sale\ apuntando\ al\ mismo\ byte\ donde\ estaba\ \ncuando\ empez\u00F3\ la\ operaci\u00F3n.\n@param\ obj\ el\ objeto\ a\ buscar\ en\ el\ archivo.\n@return\ la\ posici\u00F3n\ de\ byte\ de\ la\ primera\ ocurrencia\ del\ registro\ en\ el\ archivo,\ si\ existe,\ o\ -1\ si\ no\ existe.\n\n
comment17.params=obj
comment17.target=boolean\ add(E)
comment17.text=\nAgrega\ un\ registro\ en\ el\ archivo,\ controlando\ que\ no\ haya\ repetici\u00F3n.\ El\ archivo\ debe\ estar\ abierto\ en\ modo\ de\ \ngrabaci\u00F3n.\ El\ archivo\ vuelve\ abierto.\n@param\ obj\ el\ objeto\ a\ agregar.\n@return\ true\ si\ fue\ posible\ agregar\ el\ registro\ -\ false\ si\ no\ fue\ posible.\n\n
comment18.params=obj
comment18.target=boolean\ append(E)
comment18.text=\nAgrega\ un\ registro\ en\ el\ archivo,\ sin\ controlar\ repetici\u00F3n.\ El\ archivo\ debe\ estar\ abierto\ en\ modo\ de\ grabaci\u00F3n.\nEl\ archivo\ vuelve\ abierto.\n@param\ obj\ el\ registro\ a\ agregar.\ \n@return\ true\ si\ fue\ posible\ agregar\ el\ registro\ -\ false\ si\ no\ fue\ posible.\n\n
comment19.params=obj
comment19.target=boolean\ remove(E)
comment19.text=\nBorra\ un\ registro\ del\ archivo.\ El\ archivo\ debe\ estar\ abierto\ en\ modo\ de\ grabaci\u00F3n.\ El\ registro\ se\ marca\ como\ \nborrado,\ aunque\ sigue\ f\u00EDsicamente\ ocupando\ lugar\ en\ el\ archivo.\ El\ archivo\ vuelve\ abierto.\n@param\ obj\ el\ registro\ a\ buscar\ y\ borrar.\n@return\ true\ si\ fue\ posible\ borrar\ el\ registro\ -\ false\ si\ no\ fue\ posible.\n\n
comment2.params=file\ modo\ obj
comment2.target=RegisterFile(File,\ String,\ E)
comment2.text=\nCrea\ un\ manejador\ para\ el\ RegisterFile,\ asociando\ al\ mismo\ un\ file\ descriptor.\ Abre\ el\ archivo\ en\ disco\ asociado\ \ncon\ ese\ file\ descriptor,\ en\ el\ modo\ indicado\ por\ el\ segundo\ par\u00E1metro.\ El\ modo\ de\ apertura\ es\ tal\ y\ como\ se\ usa\ \nen\ la\ clase\ RandomAccessFile\:\ "r"\ para\ s\u00F3lo\ lectura\ y\ "rw"\ para\ lectura\ y\ grabaci\u00F3n.\ Si\ el\ modo\ de\ apertura\ \nenviado\ es\ null,\ o\ no\ es\ "r"\ ni\ "rw",\ se\ asumir\u00E1\ "r".\ El\ par\u00E1metro\ obj\ se\ usa\ para\ tomar\ la\ clase\ de\ los\ \nobjetos\ que\ ser\u00E1n\ almacenados,\ pero\ ese\ objeto\ no\ se\ graba\ en\ el\ archivo\ (puede\ venir\ con\ valores\ por\ default\:\ \ns\u00F3lo\ importa\ su\ clase).\n@param\ file\ es\ el\ pathname\ del\ archivo\ a\ crear.\n@param\ modo\ es\ el\ modo\ de\ apertura\ del\ archivo\:\ "r"\ ser\u00E1\ s\u00F3lo\ lectura\ y\ "rw"\ ser\u00E1\ lectura\ y\ grabaci\u00F3n.\n@param\ obj\ un\ objeto\ de\ la\ clase\ base\ para\ el\ archivo.\n\n
comment20.params=obj
comment20.target=boolean\ update(E)
comment20.text=\nModifica\ un\ registro\ en\ el\ archivo.\ Reemplaza\ el\ registro\ en\ una\ posici\u00F3n\ dada,\ cambiando\ sus\ datos\ por\ otros\ \ntomados\ como\ par\u00E1metro.\ El\ objeto\ que\ viene\ como\ par\u00E1metro\ se\ busca\ en\ el\ archivo,\ y\ si\ se\ encuentra\ entonces\ \nel\ que\ estaba\ en\ el\ disco\ es\ reemplazado\ por\ el\ que\ entr\u00F3\ a\ modo\ de\ par\u00E1metro.\ El\ archivo\ debe\ estar\ abierto\ en\ \nmodo\ de\ grabaci\u00F3n.\ El\ archivo\ vuelve\ abierto.\n@param\ obj\ el\ objeto\ con\ los\ nuevos\ datos.\n@return\ true\ si\ fue\ posible\ modificar\ el\ registro\ -\ false\ si\ no\ fue\ posible\n\n
comment21.target=void\ clean()
comment21.text=\nElimina\ f\u00EDsicamente\ los\ registros\ que\ estuvieran\ marcados\ como\ borrados.\ El\ archivo\ queda\ limpio,\ s\u00F3lo\ con\nregistros\ activos\ (no\ marcados\ como\ borrados).\ El\ archivo\ sale\ cerrado.\n\n
comment22.params=arch\ tam
comment22.target=String\ readString(RandomAccessFile,\ int)
comment22.text=\nLee\ desde\ un\ archivo\ un\ String\ de\ "tam"\ caracteres.\ Se\ declara\ static\ para\ que\ pueda\ ser\ usado\ en\ forma\ global\ \npor\ cualquier\ clase\ que\ requiera\ leer\ una\ cadena\ de\ longitud\ fija\ desde\ un\ archivo\ manejado\ a\ trav\u00E9s\ de\ un\ objeto\nRandomAcessFile.\ Se\ supone\ que\ la\ cadena\ est\u00E1\ grabada\ a\ partir\ de\ la\ posici\u00F3n\ actual\ dentro\ del\ RandomAccessFile,\ny\ que\ fue\ grabada\ tal\ como\ indica\ el\ m\u00E9todo\ writeString().\ La\ cadena\ se\ retorna\ tal\ como\ se\ lee,\ sin\ remover\ los\ \nespacios\ en\ blanco\ a\u00F1adidos\ al\ final\ por\ writeString()\ cuando\ la\ grab\u00F3.\n@param\ \ arch\ el\ manejador\ del\ archivo\ desde\ el\ cual\ se\ lee\ la\ cadena.\ Se\ supone\ abierto\ y\ posicionado\ en\ el\ lugar\ \ncorrecto.\n@param\ \ tam\ la\ cantidad\ de\ caracteres\ a\ leer.\n@return\ el\ String\ leido,\ sin\ remover\ los\ blancos\ que\ pudiera\ contener\ al\ final.\n\n
comment23.params=arch\ cad\ tam
comment23.target=void\ writeString(RandomAccessFile,\ String,\ int)
comment23.text=\nGraba\ en\ un\ archivo\ un\ String\ de\ "tam"\ caracteres.\ Se\ declara\ static\ para\ que\ pueda\ ser\ usado\ forma\ en\ global\ por\ \ncualquier\ clase\ que\ requiera\ grabar\ una\ cadena\ de\ longitud\ fija\ en\ un\ archivo.\ La\ cadena\ se\ graba\ de\ tal\ forma\ que\ \nsi\ no\ llegaba\ a\ tener\ tam\ caracteres,\ se\ agrega\ la\ cantidad\ necesaria\ de\ blancos\ al\ final\ de\ la\ cadena\ para\ llegar\ \na\ la\ cantidad\ tam.\ \n@param\ \ arch\ el\ manejador\ del\ archivo\ en\ el\ cual\ se\ graba,\ que\ se\ supone\ abierto\ en\ modo\ "rw"\ y\ posicionado\ en\ el\ lugar\ \ncorrecto.\n@param\ \ cad\ la\ cadena\ a\ grabar.\n@param\ \ tam\ la\ cantidad\ de\ caracteres\ a\ grabar.\n\n
comment3.target=File\ getFileDescriptor()
comment3.text=\nAccede\ al\ descriptor\ del\ archivo.\n@return\ un\ objeto\ de\ tipo\ File\ representando\ el\ pathname\ abstracto\ del\ archivo.\n\n
comment4.target=RandomAccessFile\ getMasterFile()
comment4.text=\nAcceso\ al\ manejador\ del\ archivo\ binario.\n@return\ un\ objeto\ de\ tipo\ RandomAccessFile\ que\ permite\ acceder\ al\ bloque\ f\u00EDsico\ de\ datos\ en\ disco,\ en\ forma\ directa.\n\n
comment5.target=boolean\ delete()
comment5.text=\nBorra\ el\ archivo\ del\ disco.\n@return\ true\ si\ se\ pudo\ borrar,\ o\ false\ en\ caso\ contrario.\n\n
comment6.params=nuevo
comment6.target=boolean\ rename(RegisterFile)
comment6.text=\nCambia\ el\ nombre\ del\ archivo.\n@param\ nuevo\ otro\ RegisterFile,\ cuyo\ nombre\ (o\ file\ descriptor)\ ser\u00E1\ dado\ al\ actual.\n@return\ true\ si\ el\ cambio\ de\ nombre\ pudo\ hacerse,\ false\ en\ caso\ contrario.\n\n
comment7.target=void\ close()
comment7.text=\nCierra\ el\ archivo\ asociado\ con\ el\ RegisterFile.\n\n
comment8.params=b
comment8.target=void\ seekByte(long)
comment8.text=\nUbica\ el\ puntero\ de\ registro\ activo\ en\ la\ posici\u00F3n\ del\ byte\ n\u00FAmero\ b.\ Esa\ posici\u00F3n\ podr\u00EDa\ no\ coincidir\ con\ el\ \ninicio\ de\ un\ registro.\n@param\ b\ n\u00FAmero\ del\ byte\ que\ se\ quiere\ acceder,\ contando\ desde\ el\ principio\ del\ archivo.\n\n
comment9.target=void\ rewind()
comment9.text=\nRebobina\ el\ archivo\:\ ubica\ el\ puntero\ de\ registro\ activo\ en\ la\ posici\u00F3n\ cero.\n\n
numComments=24
