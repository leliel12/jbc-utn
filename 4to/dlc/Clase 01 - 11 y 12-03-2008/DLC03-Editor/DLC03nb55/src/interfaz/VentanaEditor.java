package interfaz;

/**
 * Una clase para representar un editor muy básico con clases de manejo de archivos de texto
 * @author Ing. Valerio Frittelli
 * @version Marzo de 2008
 */

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import soporte.SimpleFileFilter;

public class VentanaEditor extends javax.swing.JFrame {
    private File arch = null;  
    
    /** Creates new form VentanaEditor */
    public VentanaEditor() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        archivo = new javax.swing.JMenu();
        nuevo = new javax.swing.JMenuItem();
        abrir = new javax.swing.JMenuItem();
        grabar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        salir = new javax.swing.JMenuItem();
        ayuda = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editor b\u00e1sico \"Java Text\"");
        setBackground(new java.awt.Color(204, 204, 204));
        setName("editor");
        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        archivo.setText("Archivo");
        nuevo.setText("Nuevo");
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });

        archivo.add(nuevo);

        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });

        archivo.add(abrir);

        grabar.setText("Guardar");
        grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grabarActionPerformed(evt);
            }
        });

        archivo.add(grabar);

        archivo.add(jSeparator1);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        archivo.add(salir);

        jMenuBar1.add(archivo);

        ayuda.setText("Ayuda");
        about.setText("Acerca de...");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });

        ayuda.add(about);

        jMenuBar1.add(ayuda);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 246, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-530)/2, (screenSize.height-323)/2, 530, 323);
    }// </editor-fold>                        

    private void grabarActionPerformed(java.awt.event.ActionEvent evt) {                                       
        if(arch != null){
            try{
                FileWriter out = new FileWriter(arch);
                BufferedWriter ofile = new BufferedWriter(out);
                ofile.write(texto.getText());
                ofile.close();
                out.close();
            }
            catch(IOException e){
                  JOptionPane.showMessageDialog(this, "Error al grabar el archivo", "Error", JOptionPane.ERROR_MESSAGE);
                  System.exit(0);
            }
        }
    }                                      

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {                                      
        JFileChooser jfd = new JFileChooser();
        String filtros[] = {"txt", "htm"};
        SimpleFileFilter filter = new SimpleFileFilter(filtros, "Archivos de texto y páginas web");
        jfd.addChoosableFileFilter(filter);
        int r = jfd.showOpenDialog(this);
        
        if(r == JFileChooser.APPROVE_OPTION){
            arch = jfd.getSelectedFile();
            if(arch != null){
                this.setTitle("Archivo: " + arch.getName());
                texto.setText("");
                try {
                    FileReader in = new FileReader(arch);
                    BufferedReader ifile = new BufferedReader(in);
                    String linea = ifile.readLine();
                    while(linea!=null){
                        texto.append(linea + "\n");
                        linea = ifile.readLine();
                    }
                    ifile.close();
                    in.close();
                }
                catch(IOException e){
                    JOptionPane.showMessageDialog(this, "Error al procesar el archivo", "Error", JOptionPane.ERROR_MESSAGE);
                    System.exit(0);
                }
            }
        }        
    }                                     

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {                                      
        JFileChooser jfd = new JFileChooser();
        jfd.setApproveButtonText("Guardar");   
        String filtros[] = {"txt", "htm"};
        SimpleFileFilter filter = new SimpleFileFilter(filtros, "Archivos de texto y páginas web");
        jfd.addChoosableFileFilter(filter);
        int r = jfd.showOpenDialog(this);
     
        if(r == JFileChooser.APPROVE_OPTION){ 
            arch = jfd.getSelectedFile();
            if(!arch.exists()){
                try{
                    arch.createNewFile();
                }
                catch(IOException e){
                    JOptionPane.showMessageDialog(this, "Error al crear el archivo", "Error", JOptionPane.ERROR_MESSAGE);
                    System.exit(0);
                }
                this.setTitle("Archivo: " + arch.getName());
                texto.setText("");
            }
            else{
                JOptionPane.showMessageDialog(this, "El archivo ya existe", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }                                     

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {                                      
        System.exit(0);
    }                                     

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {                                      
        JOptionPane.showMessageDialog(this, "Programado por: Ing. Valerio Frittelli", "Acerca de...", JOptionPane.INFORMATION_MESSAGE);
    }                                     
    
   
    // Variables declaration - do not modify                     
    private javax.swing.JMenuItem about;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenu archivo;
    private javax.swing.JMenu ayuda;
    private javax.swing.JMenuItem grabar;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JMenuItem nuevo;
    private javax.swing.JMenuItem salir;
    private javax.swing.JTextArea texto;
    // End of variables declaration                   
    
}
